import os
import sys
import unittest

try:
    from segmentation.segmentation import load_samples_from_taiga
except:
    sys.path.append(os.path.join(os.path.dirname(__file__), '..'))
    from segmentation.segmentation import load_samples_from_taiga


class TestSegmentation(unittest.TestCase):
    def test_load_samples_from_taiga_pos01(self):
        fname = os.path.join(os.path.dirname(__file__), 'testdata', 'text_with_paragraphs_01.txt')
        reference = [
            (
                '2 октября стартует Двадцать Восьмой Конкурс Прозы Фонда ВСМ в жанре "МИНИАТЮРА" Тема - свободная. '
                'Объём: НЕ БОЛЕЕ 4500 знаков с пробелами(2-3 страницы). В КОНКУРСЕ СМОГУТ УЧАСТВОВАТЬ ТОЛЬКО ТЕ '
                'АВТОРЫ, ЧЕЙ ЧИТАТЕЛЬСКИЙ СПИСОК НА МОМЕНТ ПОДАЧИ ЗАЯВКИ ДЛЯ УЧАСТИЯ НЕ БУДЕТ ПРЕВЫШАТЬ 800. '
                '1. Автор, число читателей которого не превышает 800, имеет право прислать на Конкурс ОДНО '
                'произведение В ПРОЗЕ, до 1 декабря 2010 г. 2. Участник должен строго руководствоваться Правилами '
                'Проведения Конкурсов, приведенными в объявлении. Подача заявки на Конкурс означает, что автор '
                'ознакомился с Правилами Проведения Конкурсов http://proza.ru/2010/02/20/678 и принимает их. '
                '3. Для подачи заявки необходимо разместить ссылку на произведение, предлагаемое на Конкурс, а также '
                'название произведения и адрес e-mail автора в рецензии к этому объявлению. 4. УБЕДИТЕЛЬНАЯ ПРОСЬБА '
                'КО ВСЕМ АВТОРАМ!!! ОБЯЗАТЕЛЬНО ПОСЛЕ ПОМЕЩЕНИЯ ССЫЛКИ ПРОВЕРЬТЕ ОТКРЫВАЕТСЯ ЛИ ОНА!!!',  # input
                '2 октября стартует Двадцать Восьмой Конкурс Прозы Фонда ВСМ в жанре "МИНИАТЮРА"\nТема - свободная. '
                'Объём: НЕ БОЛЕЕ 4500 знаков с пробелами(2-3 страницы).\nВ КОНКУРСЕ СМОГУТ УЧАСТВОВАТЬ ТОЛЬКО ТЕ '
                'АВТОРЫ, ЧЕЙ ЧИТАТЕЛЬСКИЙ СПИСОК НА МОМЕНТ ПОДАЧИ ЗАЯВКИ ДЛЯ УЧАСТИЯ НЕ БУДЕТ ПРЕВЫШАТЬ 800.\n'
                '1. Автор, число читателей которого не превышает 800, имеет право прислать на Конкурс ОДНО '
                'произведение В ПРОЗЕ, до 1 декабря 2010 г.\n2. Участник должен строго руководствоваться Правилами '
                'Проведения Конкурсов, приведенными в объявлении.\nПодача заявки на Конкурс означает, что автор '
                'ознакомился с Правилами Проведения Конкурсов http://proza.ru/2010/02/20/678 и принимает их.\n'
                '3. Для подачи заявки необходимо разместить ссылку на произведение, предлагаемое на Конкурс, а также '
                'название произведения и адрес e-mail автора в рецензии к этому объявлению.\n'
                '4. УБЕДИТЕЛЬНАЯ ПРОСЬБА КО ВСЕМ АВТОРАМ!!! ОБЯЗАТЕЛЬНО ПОСЛЕ ПОМЕЩЕНИЯ ССЫЛКИ ПРОВЕРЬТЕ '
                'ОТКРЫВАЕТСЯ ЛИ ОНА!!!'  # target
            )
        ]
        loaded = load_samples_from_taiga(fname)
        self.assertIsInstance(loaded, list)
        n = len(reference)
        self.assertEqual(len(loaded), n)
        for idx in range(n):
            self.assertIsInstance(loaded[idx], tuple)
            self.assertEqual(len(loaded[idx]), 2)
            self.assertEqual(loaded[idx][0], reference[idx][0], msg=loaded[idx][0])
            self.assertEqual(loaded[idx][1], reference[idx][1], msg=loaded[idx][1])

    def test_load_samples_from_taiga_pos02(self):
        fname = os.path.join(os.path.dirname(__file__), 'testdata', 'text_with_paragraphs_02.txt')
        reference = [
            (
                'Выставка художников-авангардистов в самом разгаре. Стены сплошь и рядом увешаны картинами. '
                'Судя по всему, организаторы выставки считали, что искусство рано или поздно заполнит собой всё '
                'жизненное пространство, а начаться этот процесс должен именно со стен. — Какие прекрасные работы! '
                '— Вам правда нравится — спросил польщённый автор, возникший словно из-под земли. '
                '— Да, только... простите, я не совсем понимаю, что здесь нарисовано: то ли заяц с длинными ушами, '
                'то ли олень с короткими рогами — Молодой человек, вы кто, собственно, по профессии — Зоолог. '
                '— Оно и видно... — саркастически заметил художник. — А берётесь судить о творчестве! '
                'Это — троллейбус. — Ясно, — оживился молодой человек. — Значит, на вон той картине — трамвай '
                '— Не трамвай, а однорогий олень! — Почему однорогий — Ничего не поделаешь, — глубокомысленно '
                'вздохнул художник, — соприкасаясь с искусством, природа всегда что-то теряет...',  # input
                'Выставка художников-авангардистов в самом разгаре.\nСтены сплошь и рядом увешаны картинами.\n'
                'Судя по всему, организаторы выставки считали, что искусство рано или поздно заполнит собой всё '
                'жизненное пространство, а начаться этот процесс должен именно со стен.\n— Какие прекрасные работы!\n'
                '— Вам правда нравится — спросил польщённый автор, возникший словно из-под земли.\n'
                '— Да, только... простите, я не совсем понимаю, что здесь нарисовано: то ли заяц с длинными ушами, '
                'то ли олень с короткими рогами\n'
                '— Молодой человек, вы кто, собственно, по профессии\n'
                '— Зоолог.\n'
                '— Оно и видно... — саркастически заметил художник. — А берётесь судить о творчестве! '
                'Это — троллейбус.\n'
                '— Ясно, — оживился молодой человек. — Значит, на вон той картине — трамвай\n'
                '— Не трамвай, а однорогий олень!\n'
                '— Почему однорогий\n'
                '— Ничего не поделаешь, — глубокомысленно вздохнул художник, — соприкасаясь с искусством, природа '
                'всегда что-то теряет...'  # target
            )
        ]
        loaded = load_samples_from_taiga(fname)
        self.assertIsInstance(loaded, list)
        n = len(reference)
        self.assertEqual(len(loaded), n)
        for idx in range(n):
            self.assertIsInstance(loaded[idx], tuple)
            self.assertEqual(len(loaded[idx]), 2)
            self.assertEqual(loaded[idx][0], reference[idx][0], msg=loaded[idx][0])
            self.assertEqual(loaded[idx][1], reference[idx][1], msg=loaded[idx][1])

    def test_load_samples_from_taiga_pos03(self):
        fname = os.path.join(os.path.dirname(__file__), 'testdata', 'text_with_paragraphs_03.txt')
        reference = [
            (
                'Кирилл подходит ко мне и выдыхает. -Спасибо.-говорит он и смотрит в небо. -...За что '
                '-За то,что помогаешь мне забыть её. Я улыбаюсь,но потом снова меняюсь в лице. '
                '-...Ты всё ещё любишь её -Уже нет.По краней мере,не так сильно...Спасибо...-он обнимает меня.'
                'Я обнимаю его в ответ.-Ты не представляешь,как помогла мне...Спасибо...-шепчет. -Всё хорошо.'
                'Всё будет хорошо... Мы сильнее обнимаем друг друга.И только сейчас я понимаю,что мне очень часто не '
                'хватает такого объятия...Я нуждаюсь в этом каждый день,чёрт возьми... -Кажется,пора ехать.-говорю я.'
                '-Слишком чёрные облака.Скоро начнётся ливень. -Да,ты права. Мы садимся в машину.',  # input
                'Кирилл подходит ко мне и выдыхает.\n-Спасибо.-говорит он и смотрит в небо.\n-...За что\n'
                '-За то,что помогаешь мне забыть её.\nЯ улыбаюсь,но потом снова меняюсь в лице.\n'
                '-...Ты всё ещё любишь её\n-Уже нет.По краней мере,не так сильно...Спасибо...-он обнимает меня.'
                'Я обнимаю его в ответ.-Ты не представляешь,как помогла мне...Спасибо...-шепчет.\n'
                '-Всё хорошо.Всё будет хорошо...\nМы сильнее обнимаем друг друга.И только сейчас я понимаю,'
                'что мне очень часто не хватает такого объятия...Я нуждаюсь в этом каждый день,чёрт возьми...\n'
                '-Кажется,пора ехать.-говорю я.-Слишком чёрные облака.Скоро начнётся ливень.\n-Да,ты права.\n'
                'Мы садимся в машину.'  # target
            ),
            (
                'Мы быстро хватаем пакеты с одеждой и забегаем в подъезд.Поднимаемся на этаж и открываем квартиру. '
                '-Я ужасно замёрзла... -Я тоже...Бррр... Я отношу все пакеты к себе в комнату,достаю из одного из них '
                'тёплую кофту и надеваю её.Захожу на кухню и ставлю чайник. Разогреваю еду в микроволновке и режу хлеб.'
                ' -Как же я замёрз...-говорит парень,заходя на кухню и надевая тёплую толстовку. '
                '-Дождь льёт,как из ведра...-я смотрю в окно.-Ай! -Ну почему ты вечно во что-то умудряешься вляпаться-'
                'спрашивает Кирилл и достаёт аптечку. Я смотрю на порезанный палец.Подхожу к раковине,открываю '
                'холодную воду и промываю его. -Давай.',  # input
                'Мы быстро хватаем пакеты с одеждой и забегаем в подъезд.Поднимаемся на этаж и открываем квартиру.\n'
                '-Я ужасно замёрзла...\n-Я тоже...Бррр...\nЯ отношу все пакеты к себе в комнату,достаю из одного из '
                'них тёплую кофту и надеваю её.Захожу на кухню и ставлю чайник.\nРазогреваю еду в микроволновке и режу '
                'хлеб.\n-Как же я замёрз...-говорит парень,заходя на кухню и надевая тёплую толстовку.\n'
                '-Дождь льёт,как из ведра...-я смотрю в окно.-Ай!\n-Ну почему ты вечно во что-то умудряешься вляпаться-'
                'спрашивает Кирилл и достаёт аптечку.\nЯ смотрю на порезанный палец.Подхожу к раковине,открываю '
                'холодную воду и промываю его.\n-Давай.'  # target
            )
        ]
        loaded = load_samples_from_taiga(fname)
        self.assertIsInstance(loaded, list)
        n = len(reference)
        self.assertEqual(len(loaded), n)
        for idx in range(n):
            self.assertIsInstance(loaded[idx], tuple)
            self.assertEqual(len(loaded[idx]), 2)
            self.assertEqual(loaded[idx][0], reference[idx][0], msg=loaded[idx][0])
            self.assertEqual(loaded[idx][1], reference[idx][1], msg=loaded[idx][1])

    def test_load_samples_from_taiga_pos04(self):
        fname = os.path.join(os.path.dirname(__file__), 'testdata', 'text_with_paragraphs_04.txt')
        reference = [
            (
                'За какую партию вы бы проголосовали, случись выборы в Госдуму завтра 2%"Единая Россия" 22%КПРФ '
                '13%"Справедливая Россия" 29%"Яблоко" 0%ЛДПР 0%"Правое дело" 0%"Патриоты России" '
                '34%Движение "Нах-Нах — Против всех!" ВСЕ ОПРОСЫ 22/11/2011 Нет, не тем ,что мало проголосовало за '
                '"Единую Россию",а больше всего за "Яблоко" и КПРФ. Отнюдь. Здесь все понятно и объяснимо. '
                'Тот же протест! А как объяснить 34 процента против всех Получается, что большинство из нас не верит '
                'в сегодняшнюю элиту, авангард нашего общества. Кому тогда верить Что делать Коллапс! '
                'Уверена, что многие из нас, просто "валяют Ваню".Протест униженных и обиженных! Все плохие, а мы '
                'такие хорошие. А еще обычная лень и равнодушие. Хватит обижаться и пустых разговоров. Какие мы- '
                'такая и наша элита. Кровь от крови, плоть от плоти. Другой, попросту, нет.',  # input
                'За какую партию вы бы проголосовали, случись выборы в Госдуму завтра\n2%"Единая Россия"\n'
                '22%КПРФ\n13%"Справедливая Россия"\n29%"Яблоко"\n0%ЛДПР\n0%"Правое дело"\n0%"Патриоты России"\n'
                '34%Движение "Нах-Нах — Против всех!"\nВСЕ ОПРОСЫ 22/11/2011\nНет, не тем ,что мало проголосовало за '
                '"Единую Россию",а больше всего за "Яблоко" и КПРФ. Отнюдь. Здесь все понятно и объяснимо. Тот же '
                'протест! А как объяснить 34 процента против всех Получается, что большинство из нас не верит в '
                'сегодняшнюю элиту, авангард нашего общества. Кому тогда верить Что делать Коллапс!\n'
                'Уверена, что многие из нас, просто "валяют Ваню".Протест униженных и обиженных! Все плохие, а мы '
                'такие хорошие. А еще обычная лень и равнодушие. Хватит обижаться и пустых разговоров. Какие мы- такая '
                'и наша элита. Кровь от крови, плоть от плоти. Другой, попросту, нет.'  # target
            )
        ]
        loaded = load_samples_from_taiga(fname)
        self.assertIsInstance(loaded, list)
        n = len(reference)
        self.assertEqual(len(loaded), n)
        for idx in range(n):
            self.assertIsInstance(loaded[idx], tuple)
            self.assertEqual(len(loaded[idx]), 2)
            self.assertEqual(loaded[idx][0], reference[idx][0], msg=loaded[idx][0])
            self.assertEqual(loaded[idx][1], reference[idx][1], msg=loaded[idx][1])


if __name__ == '__main__':
    unittest.main(verbosity=2)
